server:
  port: 8888
  servlet:
    context-path: /
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/plain,text/css,application/javascript

spring:
  application:
    name: clube-do-java
  datasource:
    url: jdbc:postgresql://localhost:5432/clubedojava
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:P0rdemacia}
    driver-class-name: org.postgresql.Driver
    hikari:
      connection-timeout: 30000
      maximum-pool-size: 20
      minimum-idle: 5
      pool-name: ClubedoJavaHikariCP
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        jdbc:
          lob:
            non_contextual_creation: true
        use_sql_comments: true
  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration
    repair: true
  cache:
    type: simple
  jackson:
    serialization:
      WRITE_DATES_AS_TIMESTAMPS: false
  data:
    redis:
      port: ${REDIS_PORT:6379}
      host: ${REDIS_HOST:127.0.0.1}
      password: ${REDIS_PASSWORD:}
      timeout: 2000

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  prometheus:
    metrics:
      export:
        enabled: true

jwt:
  secret: ${JWT_SECRET:7zR13HEYfQ2pIV3lUYEDIBpYI2yv4wgFmQbTXGKnJ0M5AfNcT8D6W9sCqPoZxLeO}
  expiration: 86400 # 24 horas em segundos

asaas:
  api:
    url: ${ASAAS_API_URL:https://sandbox.asaas.com/api/v3}
    key: ${ASAAS_API_KEY:your_sandbox_api_key}
  webhook:
    secret: ${ASAAS_WEBHOOK_SECRET:your_webhook_secret}

shipping:
  origin:
    zipcode: ${ORIGIN_ZIPCODE:01001000}
    city: ${ORIGIN_CITY:São Paulo}
    state: ${ORIGIN_STATE:SP}
  correios:
    api:
      url: ${CORREIOS_API_URL:https://api.correios.com.br}
      key: ${CORREIOS_API_KEY:your_correios_api_key}
  jadlog:
    api:
      url: ${JADLOG_API_URL:https://api.jadlog.com.br}
      key: ${JADLOG_API_KEY:your_jadlog_api_key}
  braspress:
    api:
      url: ${BRASPRESS_API_URL:https://api.braspress.com}
      key: ${BRASPRESS_API_KEY:your_braspress_api_key}

# Configurações específicas para ambiente de produção
---
spring:
  config:
    activate:
      on-profile: dev
  datasource:
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
  jpa:
    show-sql: false
  flyway:
    clean-disabled: true

server:
  port: ${PORT:8888}

# Log level para produção
logging:
  level:
    root: INFO
    br.com.clubedojava: INFO

# Configurações específicas para ambiente de desenvolvimento
---
spring:
  config:
    activate:
      on-profile: dev
  jpa:
    show-sql: true
  flyway:
    clean-disabled: false

# Log level para desenvolvimento
logging:
  level:
    root: INFO
    br.com.clubedojava: DEBUG
    org.springframework.web: DEBUG
    org.hibernate.SQL: DEBUG